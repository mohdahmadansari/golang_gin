basePath: /api
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.Admin:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  models.AdminLogin:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.Nurse:
    properties:
      address:
        type: string
      admin:
        $ref: '#/definitions/models.Admin'
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    required:
    - email
    - name
    - password
    - username
    type: object
  models.NurseLogin:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
host: localhost:5000
info:
  contact: {}
  description: This API developed using gin framework by Ahmad
  title: Go lang API
paths:
  /admin/nurse:
    get:
      consumes:
      - application/json
      description: Get all Nurses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Nurse'
            type: array
      security:
      - BearerAuth: []
      summary: Get all Nurses
    post:
      consumes:
      - application/json
      description: Add New Nurse
      parameters:
      - description: data
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/models.Nurse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Nurse'
      security:
      - BearerAuth: []
      summary: Add New Nurse
  /admin/nurse/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Nurse
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: 400 StatusBadRequest
          schema:
            type: string
        "404":
          description: 404 not found
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Delete Nurse
    get:
      consumes:
      - application/json
      description: Get Nurse Details
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Nurse'
        "400":
          description: 400 StatusBadRequest
          schema:
            type: string
        "404":
          description: 404 not found
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Nurse Details
    put:
      consumes:
      - application/json
      description: Update Nurse
      parameters:
      - description: data
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/models.Nurse'
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Nurse'
        "400":
          description: 400 StatusBadRequest
          schema:
            type: string
        "404":
          description: 404 not found
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update Nurse
  /admin/nurse/own:
    get:
      consumes:
      - application/json
      description: Get Own Nurses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Nurse'
            type: array
      security:
      - BearerAuth: []
      summary: Get Own Nurses
  /login:
    post:
      consumes:
      - application/json
      description: Admin Login
      parameters:
      - description: Login Request
        in: body
        name: Login
        required: true
        schema:
          $ref: '#/definitions/models.AdminLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AdminLogin'
      summary: Admin Login
  /nurse/login:
    post:
      consumes:
      - application/json
      description: Login Nurses
      parameters:
      - description: data
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/models.NurseLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.NurseLogin'
      summary: Nurse Login
  /nurse/profile:
    get:
      consumes:
      - application/json
      description: Nurse profile details
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Nurse'
        "400":
          description: 400 StatusBadRequest
          schema:
            type: string
        "404":
          description: 404 not found
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Get Profile details
    post:
      consumes:
      - application/json
      description: Update Nurse profile
      parameters:
      - description: Update Profile
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/models.Nurse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Nurse'
        "400":
          description: 400 StatusBadRequest
          schema:
            type: string
        "404":
          description: 404 not found
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: Update Nurse profile
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
